### Starting build.
# Target: Parser.ml.depends, tags: { extension:ml, file:Parser.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Parser.ml > Parser.ml.depends # cached
# Target: Parser_evaluator.ml.depends, tags: { extension:ml, file:Parser_evaluator.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Parser_evaluator.ml > Parser_evaluator.ml.depends # cached
# Target: Parser_printer.ml.depends, tags: { extension:ml, file:Parser_printer.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Parser_printer.ml > Parser_printer.ml.depends
# Target: Parser_lex.mll, tags: { extension:mll, file:Parser_lex.mll, lexer, ocaml, ocamllex, quiet }
/usr/bin/ocamllex -q Parser_lex.mll # cached
# Target: Parser_lex.ml.depends, tags: { extension:ml, file:Parser_lex.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Parser_lex.ml > Parser_lex.ml.depends # cached
# Target: Parser_par.mly.depends, tags: { extension:mly, file:Parser_par.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet }
menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' Parser_par.mly > Parser_par.mly.depends # cached
# Target: Parser_types.ml.depends, tags: { extension:ml, file:Parser_types.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Parser_types.ml > Parser_types.ml.depends # cached
# Target: Parser_types.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Parser_types.cmo, file:Parser_types.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o Parser_types.cmo Parser_types.ml # cached
# Target: Parser_par.mly, tags: { byte, compile, extension:ml, extension:mly, file:Parser_par.ml, file:Parser_par.mly, infer, menhir, ocaml, parser, quiet }
menhir --ocamlc 'ocamlfind ocamlc' --infer Parser_par.mly # cached
# Target: Parser_par.mli.depends, tags: { extension:mli, file:Parser_par.mli, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Parser_par.mli > Parser_par.mli.depends # cached
# Target: Parser_par.cmi, tags: { byte, compile, extension:mli, file:Parser_par.mli, interf, ocaml, quiet }
ocamlfind ocamlc -c -o Parser_par.cmi Parser_par.mli # cached
# Target: Parser_lex.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Parser_lex.cmo, file:Parser_lex.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o Parser_lex.cmo Parser_lex.ml # cached
# Target: Parser_printer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Parser_printer.cmo, file:Parser_printer.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o Parser_printer.cmo Parser_printer.ml
# Target: Parser_evaluator.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Parser_evaluator.cmo, file:Parser_evaluator.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o Parser_evaluator.cmo Parser_evaluator.ml # cached
# Target: Parser.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:Parser.cmo, file:Parser.ml, implem, ocaml, quiet }
ocamlfind ocamlc -c -o Parser.cmo Parser.ml # cached
# Target: Parser_par.ml.depends, tags: { extension:ml, file:Parser_par.ml, ocaml, ocamldep, quiet }
ocamlfind ocamldep -modules Parser_par.ml > Parser_par.ml.depends # cached
# Target: Parser_types.cmx, tags: { compile, extension:cmx, extension:ml, file:Parser_types.cmx, file:Parser_types.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -o Parser_types.cmx Parser_types.ml # cached
# Target: Parser_par.cmx, tags: { compile, extension:cmx, extension:ml, file:Parser_par.cmx, file:Parser_par.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -o Parser_par.cmx Parser_par.ml # cached
# Target: Parser_lex.cmx, tags: { compile, extension:cmx, extension:ml, file:Parser_lex.cmx, file:Parser_lex.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -o Parser_lex.cmx Parser_lex.ml # cached
# Target: Parser_printer.cmx, tags: { compile, extension:cmx, extension:ml, file:Parser_printer.cmx, file:Parser_printer.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -o Parser_printer.cmx Parser_printer.ml
# Target: Parser_evaluator.cmx, tags: { compile, extension:cmx, extension:ml, file:Parser_evaluator.cmx, file:Parser_evaluator.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -o Parser_evaluator.cmx Parser_evaluator.ml # cached
# Target: Parser.cmx, tags: { compile, extension:cmx, extension:ml, file:Parser.cmx, file:Parser.ml, implem, native, ocaml, quiet }
ocamlfind ocamlopt -c -o Parser.cmx Parser.ml # cached
# Target: Parser.native, tags: { dont_link_with, extension:native, file:Parser.native, link, native, ocaml, program, quiet }
ocamlfind ocamlopt -linkpkg Parser_types.cmx Parser_par.cmx Parser_lex.cmx Parser_printer.cmx Parser_evaluator.cmx Parser.cmx -o Parser.native
# Compilation successful.
